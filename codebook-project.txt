When i am getting error while install project follow this steps >>

npm config set strict-ssl false
 
npm config set registry http://registry.npmjs.org/
 
npm cache clean --force
 
retry >>>    npx create-react-app taskmate
 
node -v  ( 14.0 or more than )
npm -v   ( 6.0 or more than )
 
 
solve this problem for coding , project not installed
 
need to install one package when i run the project am getting this error related web vitals
 
npm install web-vitals

now my project install & goto project dir and serve command  >>>  npm run start

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

need to install server >>  npm i json-server

after install need to run server  >>>    json-server --watch data/db.json --port 8000

notes :  if data/db file json then run server command is ...

# json-server --watch data/db.json --port 3000

my json server is working as :  json-server --watch data/db.json --port 4000

after check its working fine.

now for ui start server :  npm run start

for updated browser list >>>    # npx update-browserslist-db@latest

clear cache for npm dependency >>

# npm cache clean --force

+++++++++++++++++++++++++++++++++++++++++++++++++++++++

Create react project for codebook steps  >>>

##################################################

for install tailwindcss via cmd command >>>

# npm install -D tailwindcss

# npm tailwindcss init

url is :   https://www.npmjs.com/package/jsonwebtoken

for backend server setup for json server with dev dependency >>>

# npm install -D json-server json-server-auth

for route instalation via cmd >>

# npm install react-router-dom@6

import css cdn link in index.css file ..

flowbite website use tailwindcss component for the same and create code use this.

icon.getbootstrap.com  use this for icon use in theame.

++++++++++++++++++++++++++++++++++++++++++++++++++++

api is not working then change some code in react api call ..

// export async function getFeaturedList(){
//     const response = await fetch(`${process.env.REACT_APP_HOST}/444/featured_products`);
//     if(!response.ok){
//         throw { message: response.statusText, status: response.status }; //eslint-disable-line
//     }
//     const data = await response.json()
//     return data;
// }

export async function getFeaturedList() {
    const response = await fetch("http://localhost:4000/featured_products");
    
    if (!response.ok) {
        throw { message: response.statusText, status: response.status }; // eslint-disable-line
    }
    
    const data = await response.json();
    return data;
}

like this 

another way is  :  create env file ...  # REACT_APP_HOST=http://localhost:4000


run both server ..

checking helps to take via github link >>

https://github.com/jeremyben/json-server-auth

need to run both server auth & json server command is >>

# json-server data/db.json -m ./node_modules/json-server-auth --port 4000


if its not working then follow some steps again ....

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

1) Correct Way to Use json-server-auth
Install json-server and json-server-auth Make sure both packages are installed:

# npm install -g json-server
# npm install json-server-auth

2) Create a Custom Server File Instead of using the -m option, create a custom server file (server.js) that integrates json-server-auth with json-server.

Example server.js:

const jsonServer = require('json-server');
const auth = require('json-server-auth');
const path = require('path');

const server = jsonServer.create();
const router = jsonServer.router(path.join(__dirname, 'data', 'db.json'));
const middlewares = jsonServer.defaults();

// Bind the auth middleware
server.db = router.db; // Required for json-server-auth to work
server.use(middlewares);
server.use(auth);
server.use(router);

const PORT = 4000;
server.listen(PORT, () => {
    console.log(`JSON Server with Auth is running on http://localhost:${PORT}`);
});


now run the server is 

3) Run the Custom Server Use Node.js to start the custom server:

# node server.js


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Now add react toast in react applications ..

instalation  >>>
# npm install --save react-toastify

go and check in her docs.

--------------------------------------------

now you can use useRef intends of event.target.email.value ...

Ex : 

const email = useRef();    // event.target.email.value    ( now you can useRef replace with target value  )

Ex : Login.js >>

import { useRef } from "react";
import { useNavigate } from "react-router-dom";
import { toast } from 'react-toastify';
import { useTitle } from "../hooks/useTitle";
import { login } from "../services";

export const Login = () => {
  useTitle("Login");
  const navigate = useNavigate();
  const email = useRef();    // event.target.email.value    ( now you can useRef replace with target value  )
  const password = useRef();

  async function handleLogin(event){
    event.preventDefault();
    try{
      const authDetail = {
        email: email.current.value,
        password: password.current.value
      }
      const data = await login(authDetail);
      data.accessToken ? navigate("/products") : toast.error(data);
    } catch(error){
      toast.error(error.message, {closeButton: true, position: "bottom-center"});
    }
  }
  
  async function handleLoginGuest(){
    email.current.value = process.env.REACT_APP_GUEST_LOGIN;
    password.current.value = process.env.REACT_APP_GUEST_PASSWORD;
    try{
      const authDetail = {
        email: email.current.value,
        password: password.current.value
      }
      const data = await login(authDetail);
      data.accessToken ? navigate("/products") : toast.error(data);
    } catch(error){
      toast.error(error.message, {closeButton: true, position: "bottom-center"});
    }
  }

  return (
    <main>
      <section>
        <p className="text-2xl text-center font-semibold dark:text-slate-100 my-10 underline underline-offset-8">Login</p>
      </section>        
        <form onSubmit={handleLogin}>
          <div className="mb-6">
              <label htmlFor="email" className="block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300">Your email</label>
              <input ref={email} type="email" id="email" className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="shubham@example.com" required autoComplete="off" />
          </div>
          <div className="mb-6">
              <label htmlFor="password" className="block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300">Your password</label>
              <input ref={password} type="password" id="password" className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" required />
          </div>
          <button type="submit" className="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Log In</button>
        </form>
        <button onClick={handleLoginGuest} className="mt-3 cursor-pointer text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-3 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Login As Guest</button>
    </main>
  )
}


Ex .  Register.js file >>

import { useNavigate } from 'react-router-dom';
import { toast } from 'react-toastify';
import { useTitle } from "../hooks/useTitle";
import { register } from '../services';

export const Register = () => {
  useTitle("Register");
  const navigate = useNavigate();

  async function handleRegister(event){
    event.preventDefault();
    try{
      const authDetail = {
        name: event.target.name.value,
        email: event.target.email.value,
        password: event.target.password.value
      }
      const data = await register(authDetail);
      data.accessToken ? navigate("/products") : toast.error(data);
    } catch(error){
      toast.error(error.message, {closeButton: true, position: "bottom-center"});
    }
  }

  return (
    <main>
      <section>
        <p className="text-2xl text-center font-semibold dark:text-slate-100 my-10 underline underline-offset-8">Register</p>
      </section>
        <form onSubmit={handleRegister}>
        <div className="mb-6">
              <label htmlFor="name" className="block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300">Your name</label>
              <input type="name" id="name" className="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 dark:shadow-sm-light" placeholder="Shubham Sarda" required autoComplete="off" />
          </div>
          <div className="mb-6">
              <label htmlFor="email" className="block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300">Your email</label>
              <input type="email" id="email" className="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 dark:shadow-sm-light" placeholder="shubham@example.com" required autoComplete="off" />
          </div>
          <div className="mb-6">
              <label htmlFor="password" className="block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300">Your password</label>
              <input type="password" id="password" className="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 dark:shadow-sm-light" required minLength="7" />
          </div>
          <button type="submit" className="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Register</button>
        </form>
    </main>
  )
}

in register use event.target.email.name 

or 


import { useRef } from "react";

const email = useRef();    // event.target.email.value    ( now you can useRef replace with target value  )
const password = useRef();
  
in login use useRef();

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

use router json file in our cart order or ecom project >>>

via cmd command is use router.json file ...

# json-server data/db.json -m ./node_modules/json-server-auth -r data/routers.json --port 8000

this command is not working in our json file ..

++++++++++++++++++++++++++++++++++++++

set env values ...

REACT_APP_HOST=http://localhost:4000
REACT_APP_GUEST_LOGIN=saurabh_g@gmail.com
REACT_APP_GUEST_PASSWORD=bestPassword


